// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7TgNrWQj5NP1iabd7btsp3
// Component: tGccqW1Tf0
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: vtr4HBe3IOcGOj/component
import Footer from "../../Footer"; // plasmic-import: d90Pci6N7gSYfW/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_normangershman_com.module.css"; // plasmic-import: 7TgNrWQj5NP1iabd7btsp3/projectcss
import sty from "./PlasmicFamilyStatement.module.css"; // plasmic-import: tGccqW1Tf0/css

export const PlasmicFamilyStatement__VariantProps = new Array();

export const PlasmicFamilyStatement__ArgProps = new Array();

function PlasmicFamilyStatement__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"normangershman.com - Family Statement"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"normangershman.com - Family Statement"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <NavBar
              data-plasmic-name={"navBar"}
              data-plasmic-override={overrides.navBar}
              className={classNames("__wab_instance", sty.navBar)}
              tabWelcome={true}
            />
          ) : null}

          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fwfrc
              )}
            >
              {"A WELCOME FROM THE GERSHMAN FAMILY"}
            </div>

            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__etqlG)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__azI96
                  )}
                >
                  {"Our father loved people."}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8RAso
                  )}
                >
                  {
                    " From 1971 onwards Norman Gershman was always in pursuit of what he called EYE CONTACT, a moment of deep connection between two people.  His camera, often a favorite Leica, was permanently attached to his body, ever at the ready. Around the world and in his own neighborhood whether photographing his family and friends or strangers, he considered encountering another soul a privilege, a gift the person gave to him that he, in turn, offered to others so that they, too, could connect."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__grms7
                  )}
                >
                  {
                    " His passion for interfaith and intercultural understanding will continue to be shared under the stewardship of this Trust and Archive through the mediums of books, films and, of course, photographs. His photographs can be found worldwide in places such as the International Center of Photography/ICP and Yad Vashem."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__juDkd
                  )}
                >
                  {
                    "     The BESA Project, which continues to tour the world, was deeply meaningful for him. It affirmed what he believed we could be – and should be – people more concerned for others than themselves making choices of the heart over choices of safety. He considered letting others know about the Albanian's actions in a time of crisis, which saved many lives, an important mission and wanted us, his children, to carry this message of possibility and hope to the public."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v45E
                  )}
                >
                  {
                    " Since his peaceful passing in 2019 we have assembled a world class team so that, as per his wishes, his work continues to be shared. This on-line archive will grow in the coming weeks.  Eventually, all of his work will be available to see if not to print. The archive is based in Vermont, a place full of joyous family memories."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mDWpX
                  )}
                >
                  {
                    "Photography was his gift to us and to the world. We are very glad to share his legacy with you."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zb9Fk
                  )}
                >
                  {
                    "Thank you for visiting. We welcome you to celebrate our father's work with us."
                  }
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__w26Vu
                  )}
                >
                  {"Leslie, Eric and Roger"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eqduc
                  )}
                >
                  {"November 27, 2021"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__tc24Q)}>
                <p.PlasmicImg
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/normangershman_com/images/rightsideskipng.png",
                    fullWidth: 750,
                    fullHeight: 991,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </div>

          {true ? (
            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          ) : null}
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "navBar", "freeBox", "columns", "img", "footer"],
  navBar: ["navBar"],
  freeBox: ["freeBox", "columns", "img"],
  columns: ["columns", "img"],
  img: ["img"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFamilyStatement__ArgProps,
      internalVariantPropNames: PlasmicFamilyStatement__VariantProps
    });

    return PlasmicFamilyStatement__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFamilyStatement";
  } else {
    func.displayName = `PlasmicFamilyStatement.${nodeName}`;
  }
  return func;
}

export const PlasmicFamilyStatement = Object.assign(
  // Top-level PlasmicFamilyStatement renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    freeBox: makeNodeComponent("freeBox"),
    columns: makeNodeComponent("columns"),
    img: makeNodeComponent("img"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicFamilyStatement
    internalVariantProps: PlasmicFamilyStatement__VariantProps,
    internalArgProps: PlasmicFamilyStatement__ArgProps
  }
);

export default PlasmicFamilyStatement;
/* prettier-ignore-end */
