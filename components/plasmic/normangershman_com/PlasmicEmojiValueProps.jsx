// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7TgNrWQj5NP1iabd7btsp3
// Component: nviMx6-5p3l2tz
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Value from "../../Value"; // plasmic-import: QEpVrIaJaWReSL/component
import Button from "../../Button"; // plasmic-import: jqA6_3BfibjBPp/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_normangershman_com.module.css"; // plasmic-import: 7TgNrWQj5NP1iabd7btsp3/projectcss
import sty from "./PlasmicEmojiValueProps.module.css"; // plasmic-import: nviMx6-5p3l2tz/css
import PlaneIcon from "./icons/PlasmicIcon__Plane"; // plasmic-import: 3JspUf2dG6XxLw/icon
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: vAo1KwdkvUMC-0/icon
import DocumentIcon from "./icons/PlasmicIcon__Document"; // plasmic-import: yCrl_vwlJbqowq/icon
import LockIcon from "./icons/PlasmicIcon__Lock"; // plasmic-import: At8unNABrW0xGr/icon

export const PlasmicEmojiValueProps__VariantProps = new Array();

export const PlasmicEmojiValueProps__ArgProps = new Array("children");

function PlasmicEmojiValueProps__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {p.renderPlasmicSlot({
        defaultContents: (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zmHou)}
          >
            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button__atd5S)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__scRt)}
                      role={"img"}
                    />
                  }
                  rounded={true}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__yhJik)}
              icon={
                <PlaneIcon
                  className={classNames(projectcss.all, sty.svg__uozrx)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lrZqn
                )}
              >
                {"Worldwide shipping"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dQk80
                )}
              >
                {"Special financing and earn rewards."}
              </div>
            </Value>

            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button__mWr6)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__iz3V6)}
                      role={"img"}
                    />
                  }
                  rounded={true}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__saPzE)}
              icon={
                <DocumentIcon
                  className={classNames(projectcss.all, sty.svg__vutQ5)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r87QZ
                )}
              >
                {"30-day guarantee"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6UHwj
                )}
              >
                {"Free return policy."}
              </div>
            </Value>

            <Value
              children2={
                <Button
                  className={classNames("__wab_instance", sty.button___7BwP3)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__kjMdk)}
                      role={"img"}
                    />
                  }
                  rounded={true}
                  size={"large"}
                >
                  {"Read our letter"}
                </Button>
              }
              className={classNames("__wab_instance", sty.value__cMvj)}
              icon={
                <LockIcon
                  className={classNames(projectcss.all, sty.svg__k2Bk7)}
                  role={"img"}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dxvnz
                )}
              >
                {"Secured payments"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__q2Ja7
                )}
              >
                {"We accept major credit cards."}
              </div>
            </Value>
          </p.Stack>
        ),

        value: args.children
      })}
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEmojiValueProps__ArgProps,
      internalVariantPropNames: PlasmicEmojiValueProps__VariantProps
    });

    return PlasmicEmojiValueProps__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEmojiValueProps";
  } else {
    func.displayName = `PlasmicEmojiValueProps.${nodeName}`;
  }
  return func;
}

export const PlasmicEmojiValueProps = Object.assign(
  // Top-level PlasmicEmojiValueProps renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicEmojiValueProps
    internalVariantProps: PlasmicEmojiValueProps__VariantProps,
    internalArgProps: PlasmicEmojiValueProps__ArgProps
  }
);

export default PlasmicEmojiValueProps;
/* prettier-ignore-end */
